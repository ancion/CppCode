#include <cstdio>
#include <cstring>
#include <iostream>

//  > 头文件(*.h)
// -----------------------------------------------------------------------
//  可定义在头文件中的内容(指定命名空间，全局变量的声明，函数的声明，数据结构和类的声明)
// ----------------
//  引用头文件
//  使用 #include<> 语句，相当于将定义在头文件的内容直接插入到 include
//  所在的位置, 让程序更加简洁
//
// -----------------------------------------------------------------------
//  > 一般来说，我们自行定义的头文件使用 #include "tool.h"
//  (双引号包裹的头文件名称的形式)
//    对于系统中已经存在, 或者C++标准中存在的头文件, 使用 #include <string>
//    格式. 因为C++整体是兼容C语言的,
//    一些C语言的头文件在C++中有一些新的名称(表示的是相同的含义)， 如下
//
//  ==> #include<stdio.h> == #include<cstdio>
//  ==> #include<string.h> == #include<cstring>
//
//
// -----------------------------------------------------------------------
//  > 命名空间
//

// 避免不同类库中的包中出现同名函数，所以使用的时候使用using声明命名空间
// 使用的时候可以省略对应的命名空间
using namespace std;

// 结构体一般小写, 注意标点符号要写全
// 结构体的声明要在使用之前
struct student {
  char name[13];
  int age;
};

/*
 * ------------------------------------------
 * 不使用命名空间的写法
 * ------------------------------------------
int main(void)
{
   int n ;
   std::cin >> n;
   std::cout << "Hello World!" << ++n << std::endl;
   return 0;
}
*/

/*
 * ------------------------------------------
 * 使用命名空间的写法
 * ------------------------------------------
 */
int main(void) {
  int n;
  cin >> n;
  // "\n" == endl
  cout << "Hello World!" << ++n << endl;
  return 0;
}
